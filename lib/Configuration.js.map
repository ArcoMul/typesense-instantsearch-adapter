{"version":3,"sources":["../src/Configuration.js"],"names":["Configuration","options","server","nodes","host","port","path","protocol","cacheSearchResultsForSeconds","additionalSearchParameters","query_by","queryBy","sort_by","sortBy","highlightFullFields","highlight_full_fields","geoLocationField","collectionSpecificSearchParameters","Object","keys","forEach","collection","params","values","some","c","console","warn","length","Error"],"mappings":"AAAA;;;;;;;;;;;;;IAEaA,a;AACX,2BAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;AACxB,SAAKC,MAAL,GAAcD,OAAO,CAACC,MAAR,IAAkB;AAC9BC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,IAAI,EAAE,EAHR;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADK;AADuB,KAAhC;AAWA,SAAKL,MAAL,CAAYM,4BAAZ,GACE,KAAKN,MAAL,CAAYM,4BAAZ,IAA4C,IAA5C,GAAmD,IAAI,EAAvD,GAA4D,KAAKN,MAAL,CAAYM,4BAD1E;AAGA,SAAKC,0BAAL,GAAkCR,OAAO,CAACQ,0BAAR,IAAsC,EAAxE;AAEA,SAAKA,0BAAL,CAAgCC,QAAhC,GACE,KAAKD,0BAAL,CAAgCE,OAAhC,IAA2C,KAAKF,0BAAL,CAAgCC,QAA3E,IAAuF,EADzF;AAGA,SAAKD,0BAAL,CAAgCG,OAAhC,GACE,KAAKH,0BAAL,CAAgCI,MAAhC,IAA0C,KAAKJ,0BAAL,CAAgCG,OAA1E,IAAqF,EADvF;AAGA,SAAKH,0BAAL,CAAgCK,mBAAhC,GACE,KAAKL,0BAAL,CAAgCK,mBAAhC,IACA,KAAKL,0BAAL,CAAgCM,qBADhC,IAEA,KAAKN,0BAAL,CAAgCC,QAHlC;AAKA,SAAKM,gBAAL,GAAwBf,OAAO,CAACe,gBAAR,IAA4B,SAApD;AAEA,SAAKC,kCAAL,GAA0ChB,OAAO,CAACgB,kCAAR,IAA8C,EAAxF;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKF,kCAAjB,EAAqDG,OAArD,CAA6D,UAACC,UAAD,EAAgB;AAC3E,UAAMC,MAAM,GAAG,KAAI,CAACL,kCAAL,CAAwCI,UAAxC,CAAf;AACAC,MAAAA,MAAM,CAACZ,QAAP,GAAkBY,MAAM,CAACX,OAAP,IAAkBW,MAAM,CAACZ,QAAzB,IAAqC,EAAvD;AACAY,MAAAA,MAAM,CAACV,OAAP,GAAiBU,MAAM,CAACT,MAAP,IAAiBS,MAAM,CAACV,OAAxB,IAAmC,EAApD;AACAU,MAAAA,MAAM,CAACR,mBAAP,GAA6BQ,MAAM,CAACR,mBAAP,IAA8BQ,MAAM,CAACP,qBAArC,IAA8DO,MAAM,CAACZ,QAAlG;AACD,KALD;AAMD;;;;WAED,oBAAW;AACT;AACA,UACE,KAAKD,0BAAL,CAAgCE,OAAhC,IACAO,MAAM,CAACK,MAAP,CAAc,KAAKN,kCAAnB,EAAuDO,IAAvD,CAA4D,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACd,OAAT;AAAA,OAA5D,CAFF,EAGE;AACAe,QAAAA,OAAO,CAACC,IAAR,CACE,gQACE,4NAFJ;AAID;AAED;AACJ;AACA;AACA;AACA;;;AACI,UACE,KAAKlB,0BAAL,CAAgCC,QAAhC,CAAyCkB,MAAzC,KAAoD,CAApD,KACCV,MAAM,CAACC,IAAP,CAAY,KAAKF,kCAAjB,EAAqDW,MAArD,KAAgE,CAAhE,IACCV,MAAM,CAACK,MAAP,CAAc,KAAKN,kCAAnB,EAAuDO,IAAvD,CAA4D,UAACC,CAAD;AAAA,eAAO,CAACA,CAAC,CAACf,QAAF,IAAc,EAAf,EAAmBkB,MAAnB,KAA8B,CAArC;AAAA,OAA5D,CAFF,CADF,EAIE;AACA,cAAM,IAAIC,KAAJ,CACJ,uLADI,CAAN;AAGD;AACF","sourcesContent":["\"use strict\";\n\nexport class Configuration {\n  constructor(options = {}) {\n    this.server = options.server || {\n      nodes: [\n        {\n          host: \"localhost\",\n          port: \"8108\",\n          path: \"\",\n          protocol: \"http\",\n        },\n      ],\n    };\n\n    this.server.cacheSearchResultsForSeconds =\n      this.server.cacheSearchResultsForSeconds == null ? 2 * 60 : this.server.cacheSearchResultsForSeconds;\n\n    this.additionalSearchParameters = options.additionalSearchParameters || {};\n\n    this.additionalSearchParameters.query_by =\n      this.additionalSearchParameters.queryBy || this.additionalSearchParameters.query_by || \"\";\n\n    this.additionalSearchParameters.sort_by =\n      this.additionalSearchParameters.sortBy || this.additionalSearchParameters.sort_by || \"\";\n\n    this.additionalSearchParameters.highlightFullFields =\n      this.additionalSearchParameters.highlightFullFields ||\n      this.additionalSearchParameters.highlight_full_fields ||\n      this.additionalSearchParameters.query_by;\n\n    this.geoLocationField = options.geoLocationField || \"_geoloc\";\n\n    this.collectionSpecificSearchParameters = options.collectionSpecificSearchParameters || {};\n\n    Object.keys(this.collectionSpecificSearchParameters).forEach((collection) => {\n      const params = this.collectionSpecificSearchParameters[collection];\n      params.query_by = params.queryBy || params.query_by || \"\";\n      params.sort_by = params.sortBy || params.sort_by || \"\";\n      params.highlightFullFields = params.highlightFullFields || params.highlight_full_fields || params.query_by;\n    });\n  }\n\n  validate() {\n    // Warn if camelCased parameters are used, suggest using snake_cased parameters instead\n    if (\n      this.additionalSearchParameters.queryBy ||\n      Object.values(this.collectionSpecificSearchParameters).some((c) => c.queryBy)\n    ) {\n      console.warn(\n        \"[typesense-instantsearch-adapter] Please use snake_cased versions of parameters in additionalSearchParameters instead of camelCased parameters. For example: Use query_by instead of queryBy. camelCased parameters will be deprecated in a future version.\" +\n          \" We're making this change so that parameter names are identical to the ones sent to Typesense (which are all snake_cased), and to also keep the types for these parameters in sync with the types defined in typesense-js.\"\n      );\n    }\n\n    /*\n     * Either additionalSearchParameters.query_by needs to be set, or\n     *   All collectionSpecificSearchParameters need to have query_by\n     *\n     * */\n    if (\n      this.additionalSearchParameters.query_by.length === 0 &&\n      (Object.keys(this.collectionSpecificSearchParameters).length === 0 ||\n        Object.values(this.collectionSpecificSearchParameters).some((c) => (c.query_by || \"\").length === 0))\n    ) {\n      throw new Error(\n        \"[typesense-instantsearch-adapter] Missing parameter: Either additionalSearchParameters.query_by needs to be set, or all collectionSpecificSearchParameters need to have .query_by set\"\n      );\n    }\n  }\n}\n"],"file":"Configuration.js"}